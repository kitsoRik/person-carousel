$main-card-initial: (
    'height': 730px,
    'width': 340px
);

$second-card-initial: (
    'height': 500px,
    'width': 240px,
    'offset': 115px
);

$third-card-initial: (
    'height': 350px,
    'width': 120px,
    'offset': 230px
);

$fourth-card-initial: (
    'height': 260px,
    'width': 90px,
    'offset': 340px
);

@function getMainCard($small-coef, $key) {
    @return map-get($main-card-initial, $key) * $small-coef;
}

@function getSecondCard($small-coef, $key) {
    @return map-get($second-card-initial, $key) * $small-coef;
}

@function getThirdCard($small-coef, $key) {
    @return map-get($third-card-initial, $key) * $small-coef;
}

@function getFourthCard($small-coef, $key) {
    @return map-get($fourth-card-initial, $key) * $small-coef;
}

$cover-card-gradient: (
    'from': #1b1c25,
    '29': #282937,
    'to': #505166
);

@mixin gradientOverhead($transition-duration) {
    &::after {
        content:'';
        position:absolute;
        left:0; top:0;
        width:100%; height:100%;
        display:inline-block;
        background-image: linear-gradient(90deg, #1b1c25cc 0%,#505166cc 100%);

        opacity: 1;

        z-index: 10000;

        transition: opacity $transition-duration ease;
    }
}

@mixin shadowForCardFactory($transition-duration) {
    &::before {
        content: '';
        width: 100%;
        height: 220px;
        background: linear-gradient(0deg, rgba(0, 0, 0, 0) 0, rgba(0, 0, 0, 0.6) 100%);
        position: absolute;
        bottom: 0;
        right: 0;

        filter: blur(4px);

        transition: all $transition-duration ease;
    }
}

@mixin outerCardFactory ($isLeftOuterCard, $small-coef) {
    $main-card-width: getMainCard($small-coef, 'width');

    height: 0;
    width: 0;

    $multiply-coef: if($isLeftOuterCard, -1, 1);

    top: calc(50%);
    @if $isLeftOuterCard { 
        left: calc(50% - (#{$main-card-width} / 2) - 430px);

        transform: perspective(100px)  rotateY(-1deg);
    } @else {    
        left: calc(50% + (#{$main-card-width} / 2) + 430px);

        transform: perspective(100px) rotateY(0);
    }

    filter: blur(7px);
    
    z-index: 1;
    

    &::before {
        height: 0;
        transform:perspective(19px) rotateX(2deg) translate($multiply-coef * 0px, 0px) skewX($multiply-coef * 45deg);
    } 
}

@mixin leftOuterCardFactory ($small-coef, $transition-duration) {
    @include gradientOverhead($transition-duration);
    @include shadowForCardFactory($transition-duration);
    @include outerCardFactory(true, $small-coef);
}

@mixin rightOuterCardFactory ($small-coef, $transition-duration) {
    @include gradientOverhead($transition-duration);
    @include shadowForCardFactory($transition-duration);
    @include outerCardFactory(false, $small-coef);
}

@mixin fourthCardFactory($isLeftCard, $small-coef) {
    $main-card-width: getMainCard($small-coef, 'width');

    $height: getFourthCard($small-coef, 'height');
    $width: getFourthCard($small-coef, 'width');
    $offset: getFourthCard($small-coef, 'offset');

    $multiply-coef: if($isLeftCard, -1, 1);

    height: $height;
    width: $width;

    top: calc(50% - #{$height / 2});

    @if($isLeftCard) {         
        left: calc(50% - (#{$main-card-width} / 2) - #{$offset + 20px});

        transform: perspective(12px) rotateY(-1deg);
    }
    @else {
        left: calc(50% + (#{$main-card-width} / 2) + #{$offset - $width + 30px});

        transform: perspective(12px) rotateY(1deg);
    }

    filter: blur(5px);

    z-index: 2;

    &::before {
        height: 40%;
        transform: perspective(19px) rotateX(1deg) translate($multiply-coef * 56%, 118%) skewX($multiply-coef * 45deg);
    }
}

@mixin leftFourthCardFactory($small-coef,  $transition-duration) {
    @include gradientOverhead($transition-duration);
    @include shadowForCardFactory($transition-duration);
    @include fourthCardFactory(true, $small-coef);
}

@mixin rightFourthCardFactory($small-coef,  $transition-duration) {
    @include gradientOverhead($transition-duration);
    @include shadowForCardFactory($transition-duration);
    @include fourthCardFactory(false, $small-coef);
}

@mixin thirdCardFactory($isLeft, $small-coef) {
    $main-card-width: getMainCard($small-coef, 'width');

    $height: getThirdCard($small-coef, 'height');
    $width: getThirdCard($small-coef,  'width');
    $offset: getThirdCard($small-coef, 'offset');

    height: $height;
    width: $width;

    $multiply-coef: if($isLeft, -1, 1);

    top: calc(50% - #{$height / 2});

    @if($isLeft) {         
        left: calc(50% - (#{$main-card-width} / 2) - #{$offset + 20px});

        transform: perspective(15px)  rotateY(-1deg);
    }
    @else {
        left: calc(50% + (#{$main-card-width} / 2) + #{$offset - $width + 30px});

        transform: perspective(15px) rotateY(1deg);
    }

    filter: blur(4px);
        
    z-index: 3;

    &::before {
        content: '';
        width: 80%;
        height: 35%;
        transform: perspective(19px) rotateX(2deg) translate($multiply-coef * 63%, 120%) skewX($multiply-coef * 45deg)
    }
}

@mixin leftThirdCardFactory($small-coef,  $transition-duration) {
    @include gradientOverhead($transition-duration);
    @include shadowForCardFactory($transition-duration);
    @include thirdCardFactory(true, $small-coef);
}

@mixin rightThirdCardFactory($small-coef,  $transition-duration) {
    @include gradientOverhead($transition-duration);
    @include shadowForCardFactory($transition-duration);
    @include thirdCardFactory(false, $small-coef);
}

@mixin secondCardFactory($isLeft, $small-coef) {
    $main-card-width: getMainCard($small-coef, 'width');

    $height: getSecondCard($small-coef, 'height');
    $width: getSecondCard($small-coef, 'width');
    $offset: getSecondCard($small-coef, 'offset');

    height: $height;
    width: $width;

    $multiply-coef: if($isLeft, -1, 1);

    top: calc(50% - #{$height / 2});

    @if $isLeft {
        left: calc(50% - (#{$main-card-width} / 2) - #{$offset});
        transform: perspective(25px) rotateY(#{-1 + deg});
    }
    @else {
        left: calc(50% + (#{$main-card-width} / 2) - #{$offset});
        transform: perspective(25px) rotateY(#{1 + deg});
    }
    

    filter: blur(3px);
    
    z-index: 4;

    &::before {
        content: '';
        height: 38%;
        width: 50%;
        /// 237
        @if($isLeft) {
            transform: perspective(19px) rotateX(2deg) translate($multiply-coef * 151%, 111%) skewX($multiply-coef * 45deg)
        } @else {
            transform: perspective(19px) rotateX(2deg) translate(#{$multiply-coef * 75%}, 111%) skewX($multiply-coef * 45deg);
        }
    }
}

@mixin leftSecondCardFactory($small-coef,  $transition-duration) {
    @include gradientOverhead($transition-duration);
    @include shadowForCardFactory($transition-duration);
    @include secondCardFactory(true, $small-coef);
}

@mixin rightSecondCardFactory($small-coef,  $transition-duration) {
    @include gradientOverhead($transition-duration);
    @include shadowForCardFactory($transition-duration);
    @include secondCardFactory(false, $small-coef);
}

@mixin centralCardFactory($small-coef, $transition-duration) {
    @include gradientOverhead($transition-duration);
    @include shadowForCardFactory($transition-duration);

    $main-card-width: getMainCard($small-coef, 'width');
    $height: getMainCard($small-coef, 'height');

    height: $height;
    width: $main-card-width;


    top: calc(50% - #{$height / 2});
    left: calc(50% - (#{$main-card-width} / 2));

    transform: perspective(0)  rotateY(0);

    z-index: 5;
    filter: blur(0);

    &::before {
        width: 80%;
        height: 25.61%;
        transform: perspective(19px) rotateX(2deg) translate(-10%, 110%) skewX(0deg);
    }

    &::after {
        opacity: 0;
    }
}


@mixin card-factory($index, $small-coef, $transition-duration) {
    transition-duration: $transition-duration;
    transition-timing-function: ease;;
    transition-property: height, width, left, top, transform, z-index, filter;

    @if $index <= 0 or $index >= 8 {
        @if $index <= 0 {
            @include leftOuterCardFactory($small-coef, $transition-duration);
        } @else {
            @include rightOuterCardFactory($small-coef, $transition-duration);
        }

    } @else {
        @if $index == 1 or $index == 7 { 
            @if $index == 1 {
                @include leftFourthCardFactory($small-coef, $transition-duration);
            } @else {
                @include rightFourthCardFactory($small-coef, $transition-duration);
            }
        }

        @if $index == 2 or $index == 6 {  
            @if $index == 2 {
                @include leftThirdCardFactory($small-coef, $transition-duration);
            } @else {
                @include rightThirdCardFactory($small-coef, $transition-duration);
            }
        }

        @if $index == 3 or $index == 5 {   
            @if $index == 3 {
                @include leftSecondCardFactory($small-coef, $transition-duration);
            } @else {
                @include rightSecondCardFactory($small-coef, $transition-duration);
            }
        }

        @if $index == 4 {
            @include centralCardFactory($small-coef, $transition-duration)
        }

    }
}

@mixin useSizeWithCoef($coef, $transition-duration) {
    &[attr-type=left-outer] { @include card-factory(0, $coef, $transition-duration); }
    &[attr-type=left-fourth] { @include card-factory(1, $coef, $transition-duration); }
    &[attr-type=left-third] { @include card-factory(2, $coef, $transition-duration); }
    &[attr-type=left-second] { @include card-factory(3, $coef, $transition-duration); }
    &[attr-type=main] { @include card-factory(4, $coef, $transition-duration); }
    &[attr-type=right-second] { @include card-factory(5, $coef, $transition-duration); }
    &[attr-type=right-third] { @include card-factory(6, $coef, $transition-duration); }
    &[attr-type=right-fourth] { @include card-factory(7, $coef, $transition-duration); }
    &[attr-type=right-outer] { @include card-factory(8, $coef, $transition-duration); }
}

@mixin useSize($maxWidthScreen, $coef, $transition-duration) {
    @media screen and (max-width: #{$maxWidthScreen + px}) {
        @include useSizeWithCoef($coef, $transition-duration);
    }
}

.card {
    $transition-duration: 300ms;

    position: absolute;

    @include useSizeWithCoef(1, $transition-duration);
    @include useSize(1366, 0.7, $transition-duration);
    @include useSize(768, 0.68, $transition-duration);
    @include useSize(600, 0.42, $transition-duration);
    @include useSize(372, 0.42, $transition-duration);
    

    display: flex;
    justify-content: center;

    user-select: none;
}

.cardImage {
    width: 100%;
    height: 100%;

    position: absolute;

    top: 0;
    left: 0;
}